题目：在一个二维数组中（每个一维数组的长度相同），每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。

测试用例：1) 数组中包含需要查找的数 2) 数组中不包含需要查找的数 3) 特殊输入- 空数组

题目分析：从右上角或者左下角开始寻找，排除不可能的区域。为什么不能从左上角和右下角，因为从这两个方位得出来的区域不规则。

代码：

class Solution {
public:
    bool Find(int target, vector<vector<int> > array) {
        bool found = false;
        
        if (array.size() != 0)
        {
            int row = 0;
            int col = array[0].size() - 1;
            while(row < array.size() && col >= 0)
            {
                if(target == array[row][col])
                {
                    found = true;
                    break;
                }
                else if(array[row][col] > target)
                    --col;
                else
                    ++row;
            }
        }
        return found;
    }
};
