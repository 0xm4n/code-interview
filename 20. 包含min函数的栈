题目描述：定义栈的数据结构，请在该类型中实现一个能够得到栈中所含最小元素的min函数（时间复杂度应为O（1））。
注意：保证测试中不会当栈为空的时候，对栈调用pop()或者min()或者top()方法。

思路：使用辅助栈

import java.util.Stack;

public class Solution {
    Stack<Integer> data = new Stack<Integer>();
    Stack<Integer> min = new Stack<Integer>();
    
    public void push(int node) {
        data.push(node);
        if(min.size()==0 || node<min.peek()){
            min.push(node);
        }else{
            min.push(min.peek());
        }
    }
    
    public void pop() {
        if(data.size()>0 && min.size()>0){
            data.pop();
            min.pop();
        }
    }
    
    public int top() {
        if(data.size() > 0){
			return data.peek();
		}
		return 0;
    }
    
    public int min() {
        if(data.size() > 0 && min.size() > 0){
			return min.peek();
		}
		return 0;
    }
}
